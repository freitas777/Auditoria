services:
  app:
    build: .
    container_name: auditoria
    env_file: .env
    environment:
      TIPO_SERVICO: app
      DOCKER_ENV: "true"
    ports:
      - "8001:8001"
    volumes:
      - ./auditoria.db:/app/auditoria.db
      - ./relatorios:/app/relatorios
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - auditoria_net
    command: >
      sh -c "python app.py & 
      celery -A tasks.celery_app worker --loglevel=info --pool=solo"

  celery_worker:
    build: .
    container_name: auditoria_celery_worker
    env_file: .env
    environment:
      TIPO_SERVICO: worker
      DOCKER_ENV: "true"
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./auditoria.db:/app/auditoria.db
      - ./relatorios:/app/relatorios
    networks:
      - auditoria_net
    command: celery -A tasks.celery_app worker --loglevel=info --pool=solo

  rabbitmq:
    image: rabbitmq:3-management
    container_name: auditoria_rabbitmq
    hostname: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - auditoria_net
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_running"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  auditoria_net:
    driver: bridge

volumes:
  rabbitmq_data:
